-- Geral:
    -- Loki: Faz sentido forçar NOT NULL em alguns atributos? e.g TIPO_ITEM.nome garante que so vai poder existir um tipo de item com o nome (obs: isso já pode ter sido grantido de algum modo). Nesse caso seria apenas para deixar essa verificação a nível de banco de dados e não no back. *Checar o trade-off disso


-- Usar CPF como id? Não seria melhor usar o login do CIn?
CREATE TABLE pessoa_fisica (
    CPF VARCHAR(20),
    NOME VARCHAR(80) CONSTRAINT NN_PESSOA_NOME NOT NULL,
    EMAIL VARCHAR(100), -- Quais implicações de UNIQUE?
    CONSTRAINT PK_PESSOA PRIMARY KEY (CPF),
    CONSTRAINT AK_PESSOA_CPF UNIQUE(NOME, EMAIL)
);


CREATE TABLE professor (
    CPF VARCHAR(20),
    CONSTRAINT PK_PROFESSOR PRIMARY KEY (CPF),
    CONSTRAINT FK_PROFESSOR FOREIGN KEY (CPF) REFERENCES pessoa_fisica (CPF)
);

CREATE TABLE disciplina (
    ID_DISCIPLINA VARCHAR(10),
    nome VARCHAR(50), CONSTRAINT NN_DISCIPLINA NOT NULL,
    CONSTRAINT PK_DISC PRIMARY KEY (ID_DISCIPLINA)
);

CREATE TABLE ministra (
    ID_DISCIPLINA VARCHAR(10),
    CPF VARCHAR(20),
    CONSTRAINT PK_MINISTRA PRIMARY KEY (ID_DISCIPLINA, CPF),
    CONSTRAINT DISCIPLINA_FK FOREIGN KEY (ID_DISCIPLINA) REFERENCES disciplina (ID_DISCIPLINA),
    CONSTRAINT PROFESSOR_FK_MINISTRA FOREIGN KEY (CPF) REFERENCES professor (CPF)
);

CREATE TABLE localizacao ( -- "local" eh palavra reservada
    ID_LOCAL NUMBER(4) GENERATED BY DEFAULT AS IDENTITY,
    CONSTRAINT PK_LOCAL PRIMARY KEY (ID_LOCAL)
);

CREATE TABLE armario (
    ID_LOCAL NUMBER(4),
    CPF VARCHAR(20),
    CONSTRAINT PK_ARMARIO PRIMARY KEY (ID_LOCAL),
    CONSTRAINT LOCALIZACAO_FK FOREIGN KEY (ID_LOCAL) REFERENCES localizacao (ID_LOCAL),
    CONSTRAINT PROFESSOR_FK_ARMARIO FOREIGN KEY (CPF) REFERENCES professor (CPF)
);

CREATE TABLE mesa ( -- talvez reformular
    ID_LOCAL NUMBER(4),
    ID_MESA NUMBER(4),
    CONSTRAINT PK_MESA PRIMARY KEY (ID_LOCAL),
    CONSTRAINT FK_MESA FOREIGN KEY (ID_LOCAL) REFERENCES localizacao (ID_LOCAL)
);

CREATE TABLE tipo_item (
    ID_TIPO NUMBER(5) GENERATED BY DEFAULT AS IDENTITY,
    QUANTIDADE_MAX NUMBER(5),
    QUANTIDADE_DISP NUMBER(4),
    DESC_TIPO_ITEM VARCHAR(300), -- "desc" eh palavra reservada
    NOME VARCHAR(100),
    CONSTRAINT PK_TIPO_ITEM PRIMARY KEY (ID_TIPO)
);

CREATE TABLE item (
    ID_ITEM NUMBER(6) GENERATED BY DEFAULT AS IDENTITY,
    ID_TIPO NUMBER(5),
    QUEBRADO NUMBER(1) DEFAULT 0,
    ID_LOCAL NUMBER(4),
    CONSTRAINT PK_ITEM PRIMARY KEY (ID_ITEM),
    CONSTRAINT FK_TIPO_ITEM FOREIGN KEY (ID_TIPO) REFERENCES tipo_item (ID_TIPO),
    CONSTRAINT FK_LOCAL FOREIGN KEY (ID_LOCAL) REFERENCES localizacao (ID_LOCAL),
    CONSTRAINT CHK_ITEM_QUEBRADO CHECK (QUEBRADO IN (0, 1))
);

CREATE TABLE solicitacao (
    ID_SOLICITACAO NUMBER(6) GENERATED BY DEFAULT AS IDENTITY,
    DATA_SOLICITACAO DATE,
    STATUS_SOL VARCHAR(20),
    DATA_ENTREGA DATE,
    DATA_DEVOLUCAO DATE,
    DESCRICAO_SOLICITACAO VARCHAR(500),
    CPF VARCHAR(20) CONSTRAINT NN_SOLICITACAO NOT NULL,
    CONSTRAINT PK_SOLICITACAO PRIMARY KEY (ID_SOLICITACAO),
    CONSTRAINT FK_SOLICITACAO FOREIGN KEY (CPF) REFERENCES pessoa_fisica (CPF)
);

CREATE TABLE solicita (
    ID_SOLICITACAO NUMBER(6),
    ID_ITEM NUMBER(6),
    QUANTIDADE NUMBER(3),
    CONSTRAINT PK_SOLICITA PRIMARY KEY (ID_SOLICITACAO, ID_TIPO)
    CONSTRAINT SOLICITACAO_FK FOREIGN KEY (ID_SOLICITACAO) REFERENCES solicitacao (ID_SOLICITACAO),
    CONSTRAINT ITEM_FK FOREIGN KEY (ID_TIPO) REFERENCES tipo_item (ID_TIPO)
);

CREATE TABLE responsavel (
    ID_ITEM NUMBER(6),
    ID_SOLICITACAO NUMBER(6),
    DATA_RESP DATE,
    CONSTRAINT PK_RESP PRIMARY KEY (ID_ITEM, ID_SOLICITACAO),
    CONSTRAINT FK_ITEM_RESP FOREIGN KEY (ID_ITEM) REFERENCES item (ID_ITEM),
    CONSTRAINT FK_SOLICITACAO_RESP FOREIGN KEY (ID_SOLICITACAO) REFERENCES solicitacao (ID_SOLICITACAO)
);

CREATE TABLE projeto (
    ID_PROJETO NUMBER(4) GENERATED BY DEFAULT AS IDENTITY,
    NOME_PROJETO VARCHAR(100),
    DESCRICAO_PROJETO VARCHAR(200),
    CPF VARCHAR(20),
    CONSTRAINT PK_PROJETO PRIMARY KEY (ID_PROJETO),
    CONSTRAINT FK_PESSOA_PROJ FOREIGN KEY (CPF) REFERENCES pessoa_fisica (CPF)
);

CREATE TABLE projeto_usa (
    ID_PROJETO NUMBER(4),
    ID_ITEM NUMBER(6),
    CONSTRAINT PK_USA PRIMARY KEY (ID_PROJETO, ID_ITEM),
    CONSTRAINT FK_ITEM_USA FOREIGN KEY (ID_ITEM) REFERENCES item (ID_ITEM),
    CONSTRAINT FK_PROJETO_USA FOREIGN KEY (ID_PROJETO) REFERENCES projeto (ID_PROJETO)
);

CREATE TABLE aluno (
    CPF VARCHAR(20),
    login_aluno VARCHAR(10), -- "login" eh uma palavra reservada
    matricula VARCHAR(20),
    CONSTRAINT PK_ALUNO PRIMARY KEY (CPF),
    CONSTRAINT FK_ALUNO FOREIGN KEY (CPF) REFERENCES pessoa_fisica (CPF)
);

CREATE TABLE tecnico (
    CPF VARCHAR(20),
    CONSTRAINT PK_TECNICO PRIMARY KEY (CPF)
    CONSTRAINT FK_TECNICO FOREIGN KEY (CPF) REFERENCES pessoa_fisica (CPF)
);

CREATE TABLE compra (
    CPF VARCHAR(20),
    ID_ITEM NUMBER(6),
    DATA_COMPRA DATE,
    QUANTIDADE_COMPRA NUMBER(5), -- Verificar se eh o valor ou quantos itens comprados foram (yoda).
    CONSTRAINT PK_COMPRA PRIMARY KEY(CPF, ID_ITEM),
    CONSTRAINT FK_PESSOA_COMPRA FOREIGN KEY (CPF) REFERENCES pessoa_fisica (CPF),
    CONSTRAINT FK_ITEM_COMPRA FOREIGN KEY (id_item) REFERENCES item (id_item)
);
